{"version":3,"file":"component---src-templates-post-js-193ab618fd847a9a3cd9.js","mappings":"yKAQMA,EAAsBC,EAAAA,GAAAA,KAAAA,WAAH,oEAAGA,CAAH,uBAGnBC,EAAmBD,EAAAA,GAAAA,OAAAA,WAAH,iEAAGA,CAAH,iDAMhBE,EAAoBF,EAAAA,GAAAA,IAAAA,WAAH,kEAAGA,CAAH,qUAkBjB,qBAAGG,MAAkBC,OAAOC,cA0DlC,UAzCqB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC5B,EAA8BD,EAAKE,eAA3BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KACbC,EAAsBF,EAAtBE,MAAOC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,KAErB,OACE,gBAAC,KAAD,CAAQN,SAAUA,GAChB,gBAAC,IAAD,CAAQI,MAAOA,IAEf,gBAACZ,EAAD,KACE,wBAAMe,UAAU,cACd,wBAAMA,UAAU,SAAhB,KACA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,aAAT,iBAGF,gBAACf,EAAD,KACE,sBAAIa,UAAU,kBAAkBH,GAChC,qBAAGG,UAAU,YACX,4BACG,IAAIG,KAAKL,GAAMM,mBAAmB,QAAS,CAC1CC,KAAM,UACNC,MAAO,OACPC,IAAK,aAGT,mCACCR,GACCA,EAAKS,OAAS,GACdT,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACP,gBAAC,EAAAV,KAAD,CAAMW,IAAKD,EAAGT,GAAE,kBAAoBW,GAAAA,CAAUH,GAA9B,IAAuCV,UAAU,OAAjE,IACIU,QAMZ,gBAACtB,EAAD,CAAmB0B,wBAAyB,CAAEC,OAAQnB","sources":["webpack://v4/./src/templates/post.js"],"sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { Layout } from '@components';\n\nconst StyledPostContainer = styled.main`\n  max-width: 1000px;\n`;\nconst StyledPostHeader = styled.header`\n  margin-bottom: 50px;\n  .tag {\n    margin-right: 10px;\n  }\n`;\nconst StyledPostContent = styled.div`\n  margin-bottom: 100px;\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 2em 0 1em;\n  }\n\n  p {\n    margin: 1em 0;\n    line-height: 1.5;\n    color: var(--light-slate);\n  }\n\n  a {\n    ${({ theme }) => theme.mixins.inlineLink};\n  }\n\n  code {\n    background-color: var(--lightest-navy);\n    color: var(--lightest-slate);\n    border-radius: var(--border-radius);\n    font-size: var(--fz-sm);\n    padding: 0.2em 0.4em;\n  }\n\n  pre code {\n    background-color: transparent;\n    padding: 0;\n  }\n`;\n\nconst PostTemplate = ({ data, location }) => {\n  const { frontmatter, html } = data.markdownRemark;\n  const { title, date, tags } = frontmatter;\n\n  return (\n    <Layout location={location}>\n      <Helmet title={title} />\n\n      <StyledPostContainer>\n        <span className=\"breadcrumb\">\n          <span className=\"arrow\">&larr;</span>\n          <Link to=\"/pensieve\">All memories</Link>\n        </span>\n\n        <StyledPostHeader>\n          <h1 className=\"medium-heading\">{title}</h1>\n          <p className=\"subtitle\">\n            <time>\n              {new Date(date).toLocaleDateString('en-US', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n              })}\n            </time>\n            <span>&nbsp;&mdash;&nbsp;</span>\n            {tags &&\n              tags.length > 0 &&\n              tags.map((tag, i) => (\n                <Link key={i} to={`/pensieve/tags/${kebabCase(tag)}/`} className=\"tag\">\n                  #{tag}\n                </Link>\n              ))}\n          </p>\n        </StyledPostHeader>\n\n        <StyledPostContent dangerouslySetInnerHTML={{ __html: html }} />\n      </StyledPostContainer>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nPostTemplate.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n};\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        description\n        date\n        slug\n        tags\n      }\n    }\n  }\n`;\n"],"names":["StyledPostContainer","styled","StyledPostHeader","StyledPostContent","theme","mixins","inlineLink","data","location","markdownRemark","frontmatter","html","title","date","tags","className","Link","to","Date","toLocaleDateString","year","month","day","length","map","tag","i","key","kebabCase","dangerouslySetInnerHTML","__html"],"sourceRoot":""}